import           Control.Monad

-----------------------------------------------------------------------------
-- 1.
j :: Monad m => m (m a) -> m a
j = join

-----------------------------------------------------------------------------
-- 2.
l1 :: Monad m => (a -> b) -> m a -> m b
l1 f x = f <$> x

-----------------------------------------------------------------------------
-- 3.
l2 :: Monad m => (a -> b -> c) -> m a -> m b -> m c
l2 f ma mb = ma >>= (\a -> f a <$> mb)

-----------------------------------------------------------------------------
-- 4.
a :: Monad m => m a -> m (a -> b) -> m b
a ma mf = ma >>= (\a -> fmap (\f -> f a) mf)

-----------------------------------------------------------------------------
-- 5.
meh :: Monad m => [a] -> (a -> m b) -> m [b]
meh [] _     = return []
meh (x:xs) f = f x >>= (\b -> ((:) b) <$> (meh xs f))

-----------------------------------------------------------------------------
-- 6.
flipType :: Monad m => [m a] -> m [a]
flipType = flip meh $ id
